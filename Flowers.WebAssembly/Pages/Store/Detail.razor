@page "/detalle/{id:int}"
@using Microsoft.AspNetCore.Components.Authorization;
@using System.Security.Claims;

@inject IProductoService productoServicio;
@inject ICarritoService carritoServicio;
@inject IWishlistService wishlistServicio;
@inject AuthenticationStateProvider authenticationStateProvider;
@inject IToastService toastService
@inject NavigationManager _navServicio

<div class="container px-4 px-lg-5 my-5">


    @if (modelo != null)
    {
        <div class="row gx-4 gx-lg-5 align-items-center">
            <div class="col-md-6">
                <img class="card-img-top border-dark border-1" src="@modelo.Imagen" style="width:100%;">
            </div>
            <div class="col-md-6">
                <h1 class="display-5 fw-bolder">@modelo.Nombre</h1>
                <div class="fs-5 mb-5">
                    @if (modelo.PrecioOferta != 0 && modelo.PrecioOferta < modelo.Precio)
                    {
                        <span class="text-danger text-decoration-line-through">S/. @modelo.Precio</span>
                        <span>S /.@modelo.PrecioOferta</span>
                    }
                    else
                    {
                        <span>S /.@modelo.Precio</span>
                    }
                </div>
                <p class="lead">@modelo.Descripcion</p>
                <div class="d-flex">
                    <input class="form-control text-center me-3" type="number" min="1" style="width:60px" @bind-value="cantidad">
                    <button class="btn btn-outline-dark flex-shrink-0 me-3" type="button" @onclick="(async() => await AgregarCarrito(modelo))">
                        <i class="bi-cart-fill me-1"></i>
                        Agregar al carrito
                    </button>
                    <button class="btn btn-outline-dark flex-shrink-0 me-3" type="button" @onclick="(async() => await AgregarWishlist(modelo))">
                        <i class="bi-cart-fill me-1"></i>
                        Agregar a la lista de deseos
                    </button>
                    <a class="btn btn-outline-dark flex-shrink-0" href="/catalogo">
                        <i class="bi-cart-fill me-1"></i>
                        Volver
                    </a>
                </div>
            </div>
        </div>
    }
    else
    {
        <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    }



</div>

@code {
    [Parameter] public int Id { get; set; }
    private ProductoDTO? modelo = null;
    private int cantidad = 1;

    protected override async Task OnParametersSetAsync()
    {
        var response = await productoServicio.Get(Id);
        if (response.IsCorrect)
            modelo = (ProductoDTO)response.Result!;
    }

    private async Task AgregarCarrito(ProductoDTO modelo)
    {
        decimal? precioFinal = (modelo.PrecioOferta != 0 && modelo.PrecioOferta < modelo.Precio) ? modelo.PrecioOferta : modelo.Precio;
        CarritoDTO carrito = new CarritoDTO()
            {
                Producto = modelo,
                Cantidad = cantidad,
                Precio = precioFinal,
                Total = Convert.ToDecimal(cantidad) * precioFinal
            };
        await carritoServicio.AddCarrito(carrito);
    }
    
    private async Task AgregarWishlist(ProductoDTO modelo)
    {
        var autenticacionState = await authenticationStateProvider.GetAuthenticationStateAsync();
        var usuarioLogueado = autenticacionState.User;

        if (usuarioLogueado.Identity?.IsAuthenticated ?? false)
        {
            var idUsuario = usuarioLogueado.FindFirst(ClaimTypes.NameIdentifier)?.Value;

            if (int.TryParse(idUsuario, out int idUsuarioInt))
            {
                WishlistDTO wishlist = new WishlistDTO()
                    {
                        IdUsuario = idUsuarioInt,
                        IdProducto = modelo.IdProducto,
                        FechaCreacion = DateTime.Now
                    };

                await wishlistServicio.Add(wishlist);
                toastService.ShowSuccess("Producto agregado a la lista de deseos");
            }
            else
            {
                // Manejo de error si no se pudo obtener el ID del usuario
                toastService.ShowError("No se pudo obtener el ID del usuario");
            }
        }
        else
        {
            // Manejo de error si el usuario no está autenticado
            toastService.ShowError("El usuario no se encuentra autenticado");
            _navServicio.NavigateTo("/login");
        }
    }
}