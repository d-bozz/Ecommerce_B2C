@page "/user"
@page "/user/{id:int}"
@using Microsoft.AspNetCore.Components.Forms

@inject IUsuarioService usuarioService;
@inject IToastService toastService;
@inject NavigationManager _navService;

@attribute [Authorize(Roles = "Administrador")];

<body id="page-top">
    <div id="wrapper">

        <Ecommerce.Frontend.Shared.AdminLateralMenu />

        <div id="content-wrapper" class="d-flex flex-column">
            <div id="content">

                <Ecommerce.Frontend.Shared.AdminNavMenu />

                <div class="container-fluid">

                    <!-- Page Heading -->
                    <h1 class="h3 mb-2 text-gray-800">@titulo</h1>
                    <p class="mb-4">
                        Cree o modifique un usuario
                    </p>

                    <RadzenTemplateForm Data="@modelo">
                        <RadzenStack>
                            <RadzenFieldset Text="Usuario">
                                <RadzenStack Gap="1rem">
                                    <RadzenRow AlignItems="AlignItems.Center">
                                        <RadzenColumn Size="12" SizeMD="1">
                                            <RadzenLabel Text="Nombre" />
                                        </RadzenColumn>
                                        <RadzenColumn Size="12" SizeMD="8">
                                            <RadzenTextBox Style="width: 30%;" @bind-Value="@modelo.NombreCompleto" Placeholder="Nombre Completo" />
                                        </RadzenColumn>
                                    </RadzenRow>
                                    <RadzenRow AlignItems="AlignItems.Center">
                                        <RadzenColumn Size="12" SizeMD="1">
                                            <RadzenLabel Text="Correo" />
                                        </RadzenColumn>
                                        <RadzenColumn Size="12" SizeMD="8">
                                            <RadzenTextBox Style="width: 30%;" @bind-Value="@modelo.Correo" Placeholder="Correo" />
                                        </RadzenColumn>
                                    </RadzenRow>
                                    <RadzenRow AlignItems="AlignItems.Center">
                                        <RadzenColumn Size="12" SizeMD="1">
                                            <RadzenLabel Text="Clave" />
                                        </RadzenColumn>
                                        <RadzenColumn Size="12" SizeMD="8">
                                            <RadzenPassword Style="width: 30%;" @bind-Value="@modelo.Clave" Placeholder="Contraseña" />
                                        </RadzenColumn>
                                    </RadzenRow>
                                    <RadzenRow AlignItems="AlignItems.Center">
                                        <RadzenColumn Size="12" SizeMD="1">
                                            <RadzenLabel Text="Confirmar clave" />
                                        </RadzenColumn>
                                        <RadzenColumn Size="12" SizeMD="8">
                                            <RadzenPassword Style="width: 30%;" @bind-Value="@modelo.ConfirmarClave" Placeholder="Confirmar Contraseña" />
                                        </RadzenColumn>
                                    </RadzenRow>
                                </RadzenStack>
                            </RadzenFieldset>
                        </RadzenStack>
                        <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Center" Gap="1rem" Class="rz-mt-8 rz-mb-4">
                            <RadzenButton ButtonType="ButtonType.Submit" Size="ButtonSize.Medium" Icon="save" Text="Guardar" Click="@(() => SaveChanges())" />
                            <RadzenButton ButtonStyle="ButtonStyle.Light" Variant="Variant.Flat" Size="ButtonSize.Medium" Icon="undo" Text="Volver" Click="@(() => BackToUsers())" />
                        </RadzenStack>
                    </RadzenTemplateForm>

                </div>
            </div>
        </div>
    </div>
</body>

@code {
    [Parameter] public int id { get; set; }
    private string titulo = "Nuevo Usuario";
    private string boton = "Crear";
    private UsuarioDTO modelo = new UsuarioDTO();

    protected override async Task OnParametersSetAsync()
    {
        if (id != 0)
        {
            titulo = "Editar Usuario";
            boton = "Actualizar";

            var response = await usuarioService.Get(id);
            if (response.IsCorrect!)
            {
                modelo = (UsuarioDTO)response.Result!;
                modelo.ConfirmarClave = modelo.Clave;
            }
            else
            {
                toastService.ShowWarning(response.Message);
            }
        }
    }

    private async Task SaveChanges()
    {
        if (modelo.Clave != modelo.ConfirmarClave)
        {
            toastService.ShowWarning("Las contraseñas no coinciden");
            return;
        }

        bool respuesta = true;
        string mensaje = string.Empty;

        if (id != 0)
        {
            var response = await usuarioService.Edit(modelo);
            if (response.IsCorrect)
                mensaje = "Usuario fue modificado";
            else
            {
                respuesta = false;
                mensaje = "No se pudo editar";
            }
        }
        else
        {
            modelo.Rol = "Administrador";
            var response = await usuarioService.Create(modelo);
            if (response.IsCorrect)
                mensaje = "Usuario fue creado";
            else
            {
                respuesta = false;
                mensaje = "No se pudo crear";
            }
        }

        if (respuesta)
        {
            toastService.ShowSuccess(mensaje);
            _navService.NavigateTo("/users");
        }
        else
            toastService.ShowError(mensaje);
    }

    private async Task BackToUsers()
    {
        _navService.NavigateTo("/users");
    }
}