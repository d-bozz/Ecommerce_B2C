@using Ecommerce.Frontend.Services.Contrat
@inject ICarritoService carritoService;
@inject IWishlistService wishService;
@implements IDisposable

@inject SweetAlertService swal;
@inject NavigationManager navManager;
@using Ecommerce.Frontend.Extensions;
@using Microsoft.AspNetCore.Components.Authorization;
@using System.Security.Claims;
@inject AuthenticationStateProvider authenticationProvider;

<div class="main_header">
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="header_container d-flex justify-content-between align-items-center">
                    <div class="canvas_open">
                        <a href="javascript:void(0)"><i class="ion-navicon"></i></a>
                    </div>
                    <div class="header_logo">
                        <a class="sticky_none" href="index.html"><img src="Store/assets/img/logo/logo.png" alt=""></a>
                    </div>
                    <!--main menu start-->
                    <div class="main_menu d-none d-lg-block">
                        <nav>
                            <ul class="d-flex">
                                <li><a class="active" href="index.html">demo</a> </li>
                                <li><a href="shop.html">shop</a></li>
                                <li><a href="product-details.html">product</a></li>
                                <li><a href="#">sale</a></li>
                                <li>
                                    <a href="#">pages</a>
                                    <ul class="sub_menu">
                                        <li><a href="cart">Cart Pages</a></li>
                                        <li><a href="checkout">Checkout Pages</a></li>
                                    </ul>
                                </li>
                                <li>
                                    <a href="blog.html">blog</a>
                                    <ul class="sub_menu">
                                        <li><a href="blog.html">Blog Pages</a></li>
                                        <li><a href="blog-details.html">Blog Details</a></li>
                                    </ul>
                                </li>
                                <li><a href="#">buy</a></li>
                            </ul>
                        </nav>
                    </div>
                    <div class="header_account">
                        <ul class="d-flex">
                            <li class="header_search"><a href="#"><i class="icon-magnifier icons"></i></a></li>
                            <li class="account_link">
                                <a href="#"><i class="icon-user icons"></i></a>
                                <ul class="dropdown_account_link">
                                    <li><a href="profile">My Account</a></li>
                                    <li><a href="login">Login</a></li>
                                    <li><a href="contact">Contact</a></li>
                                </ul>
                            </li>
                            <li><a href="wishlist"><i class="icon-heart icons"></i></a> <span class="item_count">@wishlistCount</span></li>
                            <li class="shopping_cart">
                                <a href="#"><i class="icon-basket-loaded icons"></i></a>
                                <span class="item_count">@ShowQuantityCarrito()</span>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@* <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-light">
    <div class="container">
        <a class="navbar-brand" runat="server" href="#">Ecommerce Demo</a>
        <button type="button" class="navbar-toggler" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" title="Alternar navegación" aria-controls="navbarSupportedContent"
                aria-expanded="false" aria-label="Toggle navigation" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="@NavMenuCssClass navbar-collapse d-sm-inline-flex justify-content-between">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0 ms-lg-4">

                <AuthorizeView Roles="Administrador">
                    <li class="nav-item" b-test><NavLink class="nav-link" href="dashboard"> Dashboard</NavLink></li>
                    <li class="nav-item"><NavLink class="nav-link" href="users"> Usuarios</NavLink></li>
                    <li class="nav-item"><NavLink class="nav-link" href="categories"> Categorias</NavLink></li>
                    <li class="nav-item"><NavLink class="nav-link" href="products"> Productos</NavLink></li>
                </AuthorizeView>

                <li class="nav-item"><NavLink class="nav-link" href="catalogue"> Tienda</NavLink></li>
            </ul>

            <AuthorizeView>
                <Authorized>
                    <span class="navbar-text me-3">
                        @context.User.Claims.Where(c => c.Type == ClaimTypes.Email).Select(c => c.Value).SingleOrDefault()
                    </span>
                </Authorized>
            </AuthorizeView>

            <AuthorizeView>
                <Authorized>
                    <a class="btn btn-outline-dark ms-auto ms-md-0 me-3" href="wishlist">
                        <i class="bi-heart-fill me-1"></i>
                        Whishlist
                        <span class="badge bg-dark text-white ms-1 rounded-pill"></span>
                    </a>
                </Authorized>
            </AuthorizeView>

            <a class="btn btn-outline-dark ms-auto ms-md-0 me-3" href="cart">
                <i class="bi-cart-fill me-1"></i>
                Cart
                <span class="badge bg-dark text-white ms-1 rounded-pill">@ShowQuantityCarrito()</span>
            </a>

            <AuthorizeView>
                <Authorized>
                    <button class="btn btn-outline-dark ms-auto ms-md-0 me-3" type="button" @onclick="SignOff">Salir</button>
                </Authorized>
            </AuthorizeView>

            <AuthorizeView>
                <NotAuthorized>
                    <a class="btn btn-outline-dark ms-auto ms-md-0 me-3" href="/login">Iniciar sesion</a>
                </NotAuthorized>
            </AuthorizeView>

        </div>
    </div>
</nav>
 *@
@code {
    private bool collapseNavMenu = true;
    private int idUsuario;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    private int wishlistCount;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    protected override void OnInitialized()
    {
        carritoService.ShowItems += StateHasChanged;
        GetWishlistItemCount();
    }

    private async Task GetWishlistItemCount()
    {
        try
        {
            var authState = await authenticationProvider.GetAuthenticationStateAsync();
            var user = authState.User;

            if (user.Identity?.IsAuthenticated ?? false)
            {
                var nameIdentifierClaim = user.FindFirst(ClaimTypes.NameIdentifier);
                if (nameIdentifierClaim != null)
                {
                    idUsuario = Convert.ToInt32(nameIdentifierClaim.Value);
                    wishlistCount = await wishService.GetWishlistItemCount(idUsuario);
                    StateHasChanged();
                }
                else
                {
                    Console.WriteLine("El usuario no esta autenticado");
                }
            }
            else
            {
                Console.WriteLine("El usuario no esta autenticado");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    public void Dispose()
    {
        carritoService.ShowItems -= StateHasChanged;
    }

    private int ShowQuantityCarrito()
    {
        return carritoService.QuantityProducts();
    }

    private async Task SignOff()
    {
        SweetAlertResult result = await swal.FireAsync(new SweetAlertOptions
            {
                Title = "Desea salir?",
                Icon = SweetAlertIcon.Info,
                ShowCancelButton = true,
                ConfirmButtonText = "Si",
                CancelButtonText = "No"
            });

        if (result.IsConfirmed)
        {
            var autenticacionExt = (AuthenticationExtension)authenticationProvider;
            await autenticacionExt.UpdateAuthenticationState(null);
            navManager.NavigateTo("/", true);
        }
    }
}